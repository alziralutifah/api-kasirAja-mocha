{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2024-11-29T13:45:53.470Z",
    "end": "2024-11-29T13:46:06.100Z",
    "duration": 12630,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "194b58b9-7aa6-4077-b51c-4e40b94bfd17",
      "title": "",
      "fullFile": "C:\\Users\\Dell\\Documents\\sanbercode\\api-kasirAja-mocha\\module\\suites\\kasirAja.suite.js",
      "file": "\\module\\suites\\kasirAja.suite.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9f8c7c41-a390-44f7-ad99-670bd1a949c7",
          "title": "End to End Kasir Aja Test",
          "fullFile": "C:\\Users\\Dell\\Documents\\sanbercode\\api-kasirAja-mocha\\module\\suites\\kasirAja.suite.js",
          "file": "\\module\\suites\\kasirAja.suite.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"End to End Kasir Aja Test\"",
              "fullTitle": "End to End Kasir Aja Test \"before all\" hook in \"End to End Kasir Aja Test\"",
              "timedOut": false,
              "duration": 5493,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "accessToken = await getAccessToken();",
              "err": {},
              "uuid": "2bb1c5c5-3e13-49d2-8dbb-1052e86fd36b",
              "parentUUID": "9f8c7c41-a390-44f7-ad99-670bd1a949c7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST - Create a new user successful",
              "fullTitle": "End to End Kasir Aja Test POST - Create a new user successful",
              "timedOut": false,
              "duration": 3210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await createUser(accessToken);\nexpect((await response).status).to.equal(201);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.message).to.equal(\"User berhasil ditambahkan\");\n// Simpan userId dari respons create user\nuserId = response.body.data.userId;\nconsole.log(\"User ID created: \", userId);\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Raw Response body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "a470fec4-a2dd-4515-a3a2-804927882eb8",
              "parentUUID": "9f8c7c41-a390-44f7-ad99-670bd1a949c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Should get user detail",
              "fullTitle": "End to End Kasir Aja Test GET - Should get user detail",
              "timedOut": false,
              "duration": 194,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getUserDetail(accessToken, userId);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.data).to.have.property(\"user\");\n\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Raw Response body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "b631f884-b7dd-4937-b99b-282c11abe6a6",
              "parentUUID": "9f8c7c41-a390-44f7-ad99-670bd1a949c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Should get a list of users",
              "fullTitle": "End to End Kasir Aja Test GET - Should get a list of users",
              "timedOut": false,
              "duration": 405,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getUserList(accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.data).to.have.property(\"users\");\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Raw Response body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "32f6403a-5e03-4308-9685-a3740efeee6d",
              "parentUUID": "9f8c7c41-a390-44f7-ad99-670bd1a949c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Update User Successful",
              "fullTitle": "End to End Kasir Aja Test PUT - Update User Successful",
              "timedOut": false,
              "duration": 611,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await updateUser(accessToken, userId);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.message).to.equal(\"User berhasil diupdate\");\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Raw Response Body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "a36e6613-382c-4186-bc39-a795bbb4bc18",
              "parentUUID": "9f8c7c41-a390-44f7-ad99-670bd1a949c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Delete user successful",
              "fullTitle": "End to End Kasir Aja Test DELETE - Delete user successful",
              "timedOut": false,
              "duration": 460,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"User ID:\", userId);\nconst response = await deleteUser(accessToken, userId);\n// Assertion\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.message).to.equal(\"User berhasil dihapus\")\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Raw Response Body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "78bb0f05-f4c5-48cd-8ddd-eaaf01e4c235",
              "parentUUID": "9f8c7c41-a390-44f7-ad99-670bd1a949c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST - Create categories successful",
              "fullTitle": "End to End Kasir Aja Test POST - Create categories successful",
              "timedOut": false,
              "duration": 416,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await createCategory(accessToken);\nexpect((await response).status).to.equal(201);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.message).to.equal(\"Category berhasil ditambahkan\");\n\n// Simpan categoryId dari respons create category\ncategoryId = response.body.data.categoryId;\nconsole.log(\"Category ID created: \", categoryId);\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Status: \", response.body.status);\nconsole.log(\"Message: \", response.body.message);\nconsole.log(\"Raw Response body:\", response.body);",
              "err": {},
              "uuid": "811804e4-ea8a-4161-9466-615151c949ca",
              "parentUUID": "9f8c7c41-a390-44f7-ad99-670bd1a949c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Succesfully Get The List of Categories",
              "fullTitle": "End to End Kasir Aja Test GET - Succesfully Get The List of Categories",
              "timedOut": false,
              "duration": 431,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getCategoryList(accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.data).to.have.property(\"categories\");\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Status: \", response.body.status);\nconsole.log(\"Raw Response body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "b7625633-d1a1-4151-9800-801b286671b3",
              "parentUUID": "9f8c7c41-a390-44f7-ad99-670bd1a949c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Succesfully get categories detail",
              "fullTitle": "End to End Kasir Aja Test GET - Succesfully get categories detail",
              "timedOut": false,
              "duration": 576,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getCategoryDetail(accessToken, categoryId);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.data).to.have.property(\"category\");\n\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Status: \", response.body.status);\nconsole.log(\"Raw Response body:\", response.body);",
              "err": {},
              "uuid": "2f9b2c3d-67c1-41a9-b675-b0e9fbda722d",
              "parentUUID": "9f8c7c41-a390-44f7-ad99-670bd1a949c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Update Categories Successful",
              "fullTitle": "End to End Kasir Aja Test PUT - Update Categories Successful",
              "timedOut": false,
              "duration": 458,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await updateCategory(accessToken, categoryId);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Status: \", response.body.status);\nconsole.log(\"Raw Response body:\", response.body);",
              "err": {},
              "uuid": "16d61f36-05bd-4c75-a784-ad41b2a0e5b2",
              "parentUUID": "9f8c7c41-a390-44f7-ad99-670bd1a949c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Delete categories successful",
              "fullTitle": "End to End Kasir Aja Test DELETE - Delete categories successful",
              "timedOut": false,
              "duration": 307,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await deleteCategory(accessToken, categoryId);\n// Assertion\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Status: \", response.body.status);",
              "err": {},
              "uuid": "8fc22803-fea9-4b28-b8ac-a2b6d89f0580",
              "parentUUID": "9f8c7c41-a390-44f7-ad99-670bd1a949c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a470fec4-a2dd-4515-a3a2-804927882eb8",
            "b631f884-b7dd-4937-b99b-282c11abe6a6",
            "32f6403a-5e03-4308-9685-a3740efeee6d",
            "a36e6613-382c-4186-bc39-a795bbb4bc18",
            "78bb0f05-f4c5-48cd-8ddd-eaaf01e4c235",
            "811804e4-ea8a-4161-9466-615151c949ca",
            "b7625633-d1a1-4151-9800-801b286671b3",
            "2f9b2c3d-67c1-41a9-b675-b0e9fbda722d",
            "16d61f36-05bd-4c75-a784-ad41b2a0e5b2",
            "8fc22803-fea9-4b28-b8ac-a2b6d89f0580"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7068,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}