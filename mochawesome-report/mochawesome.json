{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2024-11-29T23:22:09.405Z",
    "end": "2024-11-29T23:22:18.119Z",
    "duration": 8714,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "910c9652-0918-496c-b0a9-4b198b08835b",
      "title": "",
      "fullFile": "C:\\Users\\Dell\\Documents\\sanbercode\\api-kasirAja-mocha\\module\\suites\\kasirAja.suite.js",
      "file": "\\module\\suites\\kasirAja.suite.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "02f58afb-bf37-4140-88e9-81dffc9c86b6",
          "title": "End to End Kasir Aja Test",
          "fullFile": "C:\\Users\\Dell\\Documents\\sanbercode\\api-kasirAja-mocha\\module\\suites\\kasirAja.suite.js",
          "file": "\\module\\suites\\kasirAja.suite.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"End to End Kasir Aja Test\"",
              "fullTitle": "End to End Kasir Aja Test \"before all\" hook in \"End to End Kasir Aja Test\"",
              "timedOut": false,
              "duration": 4430,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "accessToken = await getAccessToken();",
              "err": {},
              "uuid": "3973803a-03d5-425b-821d-e0feb21c35dc",
              "parentUUID": "02f58afb-bf37-4140-88e9-81dffc9c86b6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST - Create a new user successful",
              "fullTitle": "End to End Kasir Aja Test POST - Create a new user successful",
              "timedOut": false,
              "duration": 2018,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await createUser(accessToken);\nexpect((await response).status).to.equal(201);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.message).to.equal(\"User berhasil ditambahkan\");\n// Simpan userId dari respons create user\nuserId = response.body.data.userId;\nconsole.log(\"User ID created: \", userId);\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Raw Response body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "86b4c4bd-2fca-47fa-b766-379bae33d3b0",
              "parentUUID": "02f58afb-bf37-4140-88e9-81dffc9c86b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Should get user detail",
              "fullTitle": "End to End Kasir Aja Test GET - Should get user detail",
              "timedOut": false,
              "duration": 519,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getUserDetail(accessToken, userId);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.data).to.have.property(\"user\");\n\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Raw Response body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "72b4a50a-ae2b-4e9c-be18-6a48b4b762f9",
              "parentUUID": "02f58afb-bf37-4140-88e9-81dffc9c86b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Should get a list of users",
              "fullTitle": "End to End Kasir Aja Test GET - Should get a list of users",
              "timedOut": false,
              "duration": 308,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getUserList(accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.data).to.have.property(\"users\");\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Raw Response body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "f7ad99bf-40e6-4e62-834e-d27058483e3e",
              "parentUUID": "02f58afb-bf37-4140-88e9-81dffc9c86b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Update User Successful",
              "fullTitle": "End to End Kasir Aja Test PUT - Update User Successful",
              "timedOut": false,
              "duration": 249,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await updateUser(accessToken, userId);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.message).to.equal(\"User berhasil diupdate\");\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Raw Response Body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "5ea2b78a-76d5-486e-8fd3-18dd92f47b80",
              "parentUUID": "02f58afb-bf37-4140-88e9-81dffc9c86b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Delete user successful",
              "fullTitle": "End to End Kasir Aja Test DELETE - Delete user successful",
              "timedOut": false,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"User ID:\", userId);\nconst response = await deleteUser(accessToken, userId);\n// Assertion\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.message).to.equal(\"User berhasil dihapus\")\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Raw Response Body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "cef8649f-e31e-4e18-b5f3-a8497def8cbf",
              "parentUUID": "02f58afb-bf37-4140-88e9-81dffc9c86b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST - Create categories successful",
              "fullTitle": "End to End Kasir Aja Test POST - Create categories successful",
              "timedOut": false,
              "duration": 476,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await createCategory(accessToken);\nexpect((await response).status).to.equal(201);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.message).to.equal(\"Category berhasil ditambahkan\");\n\n// Simpan categoryId dari respons create category\ncategoryId = response.body.data.categoryId;\nconsole.log(\"Category ID created: \", categoryId);\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Status: \", response.body.status);\nconsole.log(\"Message: \", response.body.message);\nconsole.log(\"Raw Response body:\", response.body);",
              "err": {},
              "uuid": "fe0de498-66f2-4461-866e-54de08c5b3eb",
              "parentUUID": "02f58afb-bf37-4140-88e9-81dffc9c86b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Succesfully Get The List of Categories",
              "fullTitle": "End to End Kasir Aja Test GET - Succesfully Get The List of Categories",
              "timedOut": false,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getCategoryList(accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.data).to.have.property(\"categories\");\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Status: \", response.body.status);\nconsole.log(\"Raw Response body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "45574401-87e0-4784-83a1-961fdf4202e2",
              "parentUUID": "02f58afb-bf37-4140-88e9-81dffc9c86b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Succesfully get categories detail",
              "fullTitle": "End to End Kasir Aja Test GET - Succesfully get categories detail",
              "timedOut": false,
              "duration": 177,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getCategoryDetail(accessToken, categoryId);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.data).to.have.property(\"category\");\n\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Status: \", response.body.status);\nconsole.log(\"Raw Response body:\", response.body);",
              "err": {},
              "uuid": "ee41f3ee-a993-4e70-9cb2-6e7e298aac4f",
              "parentUUID": "02f58afb-bf37-4140-88e9-81dffc9c86b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Update Categories Successful",
              "fullTitle": "End to End Kasir Aja Test PUT - Update Categories Successful",
              "timedOut": false,
              "duration": 124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await updateCategory(accessToken, categoryId);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Status: \", response.body.status);\nconsole.log(\"Raw Response body:\", response.body);",
              "err": {},
              "uuid": "1f981414-ff86-4317-be9c-a112c12751bb",
              "parentUUID": "02f58afb-bf37-4140-88e9-81dffc9c86b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Delete categories successful",
              "fullTitle": "End to End Kasir Aja Test DELETE - Delete categories successful",
              "timedOut": false,
              "duration": 118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await deleteCategory(accessToken, categoryId);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Status: \", response.body.status);",
              "err": {},
              "uuid": "c5b46543-28fc-4e55-a93c-c778612b3f86",
              "parentUUID": "02f58afb-bf37-4140-88e9-81dffc9c86b6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "86b4c4bd-2fca-47fa-b766-379bae33d3b0",
            "72b4a50a-ae2b-4e9c-be18-6a48b4b762f9",
            "f7ad99bf-40e6-4e62-834e-d27058483e3e",
            "5ea2b78a-76d5-486e-8fd3-18dd92f47b80",
            "cef8649f-e31e-4e18-b5f3-a8497def8cbf",
            "fe0de498-66f2-4461-866e-54de08c5b3eb",
            "45574401-87e0-4784-83a1-961fdf4202e2",
            "ee41f3ee-a993-4e70-9cb2-6e7e298aac4f",
            "1f981414-ff86-4317-be9c-a112c12751bb",
            "c5b46543-28fc-4e55-a93c-c778612b3f86"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4268,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}