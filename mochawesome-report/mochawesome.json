{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2024-11-30T05:47:39.546Z",
    "end": "2024-11-30T05:47:46.186Z",
    "duration": 6640,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ca5dce0f-a00e-4b88-9095-2b30c75e1be4",
      "title": "",
      "fullFile": "C:\\Users\\Dell\\Documents\\sanbercode\\api-kasirAja-mocha\\module\\suites\\kasirAja.suite.js",
      "file": "\\module\\suites\\kasirAja.suite.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f09549de-24f3-475c-ae01-b8f6f8022f71",
          "title": "End to End Kasir Aja Test",
          "fullFile": "C:\\Users\\Dell\\Documents\\sanbercode\\api-kasirAja-mocha\\module\\suites\\kasirAja.suite.js",
          "file": "\\module\\suites\\kasirAja.suite.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"End to End Kasir Aja Test\"",
              "fullTitle": "End to End Kasir Aja Test \"before all\" hook in \"End to End Kasir Aja Test\"",
              "timedOut": false,
              "duration": 3875,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "accessToken = await getAccessToken();",
              "err": {},
              "uuid": "4416d11b-1cce-46cc-9258-f3a127d7df43",
              "parentUUID": "f09549de-24f3-475c-ae01-b8f6f8022f71",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST - Create a new user successful",
              "fullTitle": "End to End Kasir Aja Test POST - Create a new user successful",
              "timedOut": false,
              "duration": 686,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await createUser(accessToken);\nexpect((await response).status).to.equal(201);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.message).to.equal(\"User berhasil ditambahkan\");\n// Simpan userId dari respons create user\nuserId = response.body.data.userId;\nconsole.log(\"User ID created: \", userId);\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Raw Response body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "c0a87986-927b-4ba3-8e37-66a99fd56e84",
              "parentUUID": "f09549de-24f3-475c-ae01-b8f6f8022f71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Should get user detail",
              "fullTitle": "End to End Kasir Aja Test GET - Should get user detail",
              "timedOut": false,
              "duration": 300,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getUserDetail(accessToken, userId);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.data).to.have.property(\"user\");\n\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Raw Response body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "89085fde-49a0-4a06-8140-e63f5192340b",
              "parentUUID": "f09549de-24f3-475c-ae01-b8f6f8022f71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Should get a list of users",
              "fullTitle": "End to End Kasir Aja Test GET - Should get a list of users",
              "timedOut": false,
              "duration": 204,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getUserList(accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.data).to.have.property(\"users\");\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Raw Response body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "b49cb91a-a2a6-4523-aff9-3b39c88acea4",
              "parentUUID": "f09549de-24f3-475c-ae01-b8f6f8022f71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Update User Successful",
              "fullTitle": "End to End Kasir Aja Test PUT - Update User Successful",
              "timedOut": false,
              "duration": 203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await updateUser(accessToken, userId);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.message).to.equal(\"User berhasil diupdate\");\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Raw Response Body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "843e4404-13c3-4e23-b9c0-19e8d32b1b2f",
              "parentUUID": "f09549de-24f3-475c-ae01-b8f6f8022f71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Delete user successful",
              "fullTitle": "End to End Kasir Aja Test DELETE - Delete user successful",
              "timedOut": false,
              "duration": 270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"User ID:\", userId);\nconst response = await deleteUser(accessToken, userId);\n// Assertion\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.message).to.equal(\"User berhasil dihapus\")\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Raw Response Body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "fa114c62-ff86-46ba-b163-9f9e01e9a488",
              "parentUUID": "f09549de-24f3-475c-ae01-b8f6f8022f71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST - Create categories successful",
              "fullTitle": "End to End Kasir Aja Test POST - Create categories successful",
              "timedOut": false,
              "duration": 513,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await createCategory(accessToken);\nexpect((await response).status).to.equal(201);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.message).to.equal(\"Category berhasil ditambahkan\");\n\n// Simpan categoryId dari respons create category\ncategoryId = response.body.data.categoryId;\nconsole.log(\"Category ID created: \", categoryId);\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Status: \", response.body.status);\nconsole.log(\"Message: \", response.body.message);\nconsole.log(\"Raw Response body:\", response.body);",
              "err": {},
              "uuid": "3b027435-e7ac-42a9-a354-00b7996f3e93",
              "parentUUID": "f09549de-24f3-475c-ae01-b8f6f8022f71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Succesfully Get The List of Categories",
              "fullTitle": "End to End Kasir Aja Test GET - Succesfully Get The List of Categories",
              "timedOut": false,
              "duration": 185,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getCategoryList(accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.data).to.have.property(\"categories\");\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Status: \", response.body.status);\nconsole.log(\"Raw Response body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "3bd85821-777a-4bb3-aa86-6c0d9e1a6891",
              "parentUUID": "f09549de-24f3-475c-ae01-b8f6f8022f71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Succesfully get categories detail",
              "fullTitle": "End to End Kasir Aja Test GET - Succesfully get categories detail",
              "timedOut": false,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getCategoryDetail(accessToken, categoryId);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.data).to.have.property(\"category\");\n\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Status: \", response.body.status);\nconsole.log(\"Raw Response body:\", response.body);",
              "err": {},
              "uuid": "41d96812-7f07-44a9-87d2-f38a6b16b2d9",
              "parentUUID": "f09549de-24f3-475c-ae01-b8f6f8022f71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Update Categories Successful",
              "fullTitle": "End to End Kasir Aja Test PUT - Update Categories Successful",
              "timedOut": false,
              "duration": 150,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await updateCategory(accessToken, categoryId);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Status: \", response.body.status);\nconsole.log(\"Raw Response body:\", response.body);",
              "err": {},
              "uuid": "4f2ce92f-2ff1-4fad-934d-212c27d5fe9c",
              "parentUUID": "f09549de-24f3-475c-ae01-b8f6f8022f71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Delete categories successful",
              "fullTitle": "End to End Kasir Aja Test DELETE - Delete categories successful",
              "timedOut": false,
              "duration": 126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await deleteCategory(accessToken, categoryId);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Status: \", response.body.status);",
              "err": {},
              "uuid": "7a4d7b56-441d-48e8-aba7-828a72628be0",
              "parentUUID": "f09549de-24f3-475c-ae01-b8f6f8022f71",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c0a87986-927b-4ba3-8e37-66a99fd56e84",
            "89085fde-49a0-4a06-8140-e63f5192340b",
            "b49cb91a-a2a6-4523-aff9-3b39c88acea4",
            "843e4404-13c3-4e23-b9c0-19e8d32b1b2f",
            "fa114c62-ff86-46ba-b163-9f9e01e9a488",
            "3b027435-e7ac-42a9-a354-00b7996f3e93",
            "3bd85821-777a-4bb3-aa86-6c0d9e1a6891",
            "41d96812-7f07-44a9-87d2-f38a6b16b2d9",
            "4f2ce92f-2ff1-4fad-934d-212c27d5fe9c",
            "7a4d7b56-441d-48e8-aba7-828a72628be0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2748,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}