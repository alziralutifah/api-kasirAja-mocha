{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2024-11-28T23:41:10.216Z",
    "end": "2024-11-28T23:41:22.802Z",
    "duration": 12586,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5fda5463-633c-40ee-876d-90cbbdbffe2f",
      "title": "",
      "fullFile": "C:\\Users\\Dell\\Documents\\sanbercode\\api-kasirAja-mocha\\module\\test_mochawesome\\run.js",
      "file": "\\module\\test_mochawesome\\run.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7bb48d1b-b5f5-49e5-b2ee-2f4a8b45775c",
          "title": "End to End Kasir Aja Test",
          "fullFile": "C:\\Users\\Dell\\Documents\\sanbercode\\api-kasirAja-mocha\\module\\test_mochawesome\\run.js",
          "file": "\\module\\test_mochawesome\\run.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"End to End Kasir Aja Test\"",
              "fullTitle": "End to End Kasir Aja Test \"before all\" hook in \"End to End Kasir Aja Test\"",
              "timedOut": false,
              "duration": 4554,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "accessToken = await getAccessToken();",
              "err": {},
              "uuid": "af535d75-92b1-492e-8069-bd1e7485237a",
              "parentUUID": "7bb48d1b-b5f5-49e5-b2ee-2f4a8b45775c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST - Create a new user successful",
              "fullTitle": "End to End Kasir Aja Test POST - Create a new user successful",
              "timedOut": false,
              "duration": 4146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await createUser(accessToken);\nexpect((await response).status).to.equal(201);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.message).to.equal(\"User berhasil ditambahkan\");\n// Simpan userId dari respons create user\nuserId = response.body.data.userId;\nconsole.log(\"User ID created: \", userId);\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Raw Response body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "6f14a460-255d-4356-bd33-0481c0937430",
              "parentUUID": "7bb48d1b-b5f5-49e5-b2ee-2f4a8b45775c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Should get user detail",
              "fullTitle": "End to End Kasir Aja Test GET - Should get user detail",
              "timedOut": false,
              "duration": 181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getUserDetail(accessToken, userId);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.data).to.have.property(\"user\");\n\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Raw Response body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "24c18e50-ebc0-4256-8103-c7c095a777bc",
              "parentUUID": "7bb48d1b-b5f5-49e5-b2ee-2f4a8b45775c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Should get a list of users",
              "fullTitle": "End to End Kasir Aja Test GET - Should get a list of users",
              "timedOut": false,
              "duration": 502,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getUserList(accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.data).to.have.property(\"users\");\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Raw Response body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "028a3801-8a57-4272-ae3a-de6257d41757",
              "parentUUID": "7bb48d1b-b5f5-49e5-b2ee-2f4a8b45775c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Update User Successful",
              "fullTitle": "End to End Kasir Aja Test PUT - Update User Successful",
              "timedOut": false,
              "duration": 474,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await updateUser(accessToken, userId);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.message).to.equal(\"User berhasil diupdate\");\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Raw Response Body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "c57afa16-1b56-453e-817e-7accf4360912",
              "parentUUID": "7bb48d1b-b5f5-49e5-b2ee-2f4a8b45775c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Delete user successful",
              "fullTitle": "End to End Kasir Aja Test DELETE - Delete user successful",
              "timedOut": false,
              "duration": 301,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"User ID:\", userId);\nconst response = await deleteUser(accessToken, userId);\n// Assertion\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.message).to.equal(\"User berhasil dihapus\")\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Raw Response Body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "75b2b957-92ed-430b-97a6-ffca0d2349f2",
              "parentUUID": "7bb48d1b-b5f5-49e5-b2ee-2f4a8b45775c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST - Create categories successful",
              "fullTitle": "End to End Kasir Aja Test POST - Create categories successful",
              "timedOut": false,
              "duration": 1316,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await createCategory(accessToken);\nexpect((await response).status).to.equal(201);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.message).to.equal(\"Category berhasil ditambahkan\");\n\n// Simpan categoryId dari respons create category\ncategoryId = response.body.data.categoryId;\nconsole.log(\"Category ID created: \", categoryId);\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Status: \", response.body.status);\nconsole.log(\"Message: \", response.body.message);\nconsole.log(\"Raw Response body:\", response.body);",
              "err": {},
              "uuid": "45b97a2b-32f0-42e5-9ba4-1bdc0fb0d2b9",
              "parentUUID": "7bb48d1b-b5f5-49e5-b2ee-2f4a8b45775c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Succesfully Get The List of Categories",
              "fullTitle": "End to End Kasir Aja Test GET - Succesfully Get The List of Categories",
              "timedOut": false,
              "duration": 311,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getCategoryList(accessToken);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.data).to.have.property(\"categories\");\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Status: \", response.body.status);\nconsole.log(\"Raw Response body:\", JSON.stringify(response.body, null, 2));",
              "err": {},
              "uuid": "197a506b-cb58-4ff8-ae50-55789ed1d955",
              "parentUUID": "7bb48d1b-b5f5-49e5-b2ee-2f4a8b45775c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Succesfully get categories detail",
              "fullTitle": "End to End Kasir Aja Test GET - Succesfully get categories detail",
              "timedOut": false,
              "duration": 295,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await getCategoryDetail(accessToken, categoryId);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nexpect((await response).body.data).to.have.property(\"category\");\n\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Status: \", response.body.status);\nconsole.log(\"Raw Response body:\", response.body);",
              "err": {},
              "uuid": "3b173f35-4ab7-45b2-8abf-c11d9dd45170",
              "parentUUID": "7bb48d1b-b5f5-49e5-b2ee-2f4a8b45775c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Update Categories Successful",
              "fullTitle": "End to End Kasir Aja Test PUT - Update Categories Successful",
              "timedOut": false,
              "duration": 288,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await updateCategory(accessToken, categoryId);\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Status: \", response.body.status);\nconsole.log(\"Raw Response body:\", response.body);",
              "err": {},
              "uuid": "8175d0fb-938b-4e0d-969f-bc5445613e5f",
              "parentUUID": "7bb48d1b-b5f5-49e5-b2ee-2f4a8b45775c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Delete categories successful",
              "fullTitle": "End to End Kasir Aja Test DELETE - Delete categories successful",
              "timedOut": false,
              "duration": 200,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await deleteCategory(accessToken, categoryId);\n// Assertion\nexpect((await response).status).to.equal(200);\nexpect((await response).body.status).to.equal(\"success\");\nconsole.log(\"Status Code: \", response.status); \nconsole.log(\"Status: \", response.body.status);",
              "err": {},
              "uuid": "e74ec0c8-ec9b-4901-99ee-25f2d9f30188",
              "parentUUID": "7bb48d1b-b5f5-49e5-b2ee-2f4a8b45775c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6f14a460-255d-4356-bd33-0481c0937430",
            "24c18e50-ebc0-4256-8103-c7c095a777bc",
            "028a3801-8a57-4272-ae3a-de6257d41757",
            "c57afa16-1b56-453e-817e-7accf4360912",
            "75b2b957-92ed-430b-97a6-ffca0d2349f2",
            "45b97a2b-32f0-42e5-9ba4-1bdc0fb0d2b9",
            "197a506b-cb58-4ff8-ae50-55789ed1d955",
            "3b173f35-4ab7-45b2-8abf-c11d9dd45170",
            "8175d0fb-938b-4e0d-969f-bc5445613e5f",
            "e74ec0c8-ec9b-4901-99ee-25f2d9f30188"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8014,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "custom-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "custom-report",
        "reportFilename": "custom-report",
        "reportTitle": "Kasir Aja Test Report"
      },
      "version": "6.2.0"
    }
  }
}